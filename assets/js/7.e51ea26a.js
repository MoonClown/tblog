(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{208:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.cnblogs.com/maple-shaw/articles/9285269.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("博客地址"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"fbv-function-based-view"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fbv-function-based-view"}},[t._v("#")]),t._v(" FBV  (function based view )")]),t._v(" "),a("blockquote",[a("p",[t._v("基于函数的视图")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("def index(request):\n\t# 逻辑\n\treturn reponse\n")])])]),a("h3",{attrs:{id:"cbv-class-based-view"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cbv-class-based-view"}},[t._v("#")]),t._v(" CBV (class based view )")]),t._v(" "),a("blockquote",[a("p",[t._v("基于类的视图")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("from django.views import View\nclass PublisherAdd(View):\n    def get(self,request,*args,**kwargs):\n        # 处理GET请求的逻辑\n        return response\n    def post(self,request,*args,**kwargs):\n        # 处理GET请求的逻辑\n        return response\n")])])]),a("h4",{attrs:{id:"cbv-在路由中设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cbv-在路由中设置"}},[t._v("#")]),t._v(" CBV 在路由中设置:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# views.PublisherAdd.as_view()")]),t._v("\nurl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("r'^publisher/add/$'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" views"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PublisherAdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("as_view"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pub_add'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("as_view()的流程:")]),t._v(" "),a("ol",[a("li",[t._v("self.request= request")]),t._v(" "),a("li",[t._v("通过反射获取对应请求方式(GET)对应的方法(get)")])]),t._v(" "),a("h3",{attrs:{id:"三种给cbv加装饰器的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三种给cbv加装饰器的方法"}},[t._v("#")]),t._v(" 三种给CBV加装饰器的方法:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("from django.utils.decorators import method_decorator  # 推荐使用\n")])])]),a("ol",[a("li",[a("p",[t._v("加在方法上:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@method_decorator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("加在dispatch方法上")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@method_decorator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    ret "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dispatch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ret\n    \n"),a("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@method_decorator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dispatch'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PublisherAdd")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("View"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("加在类上")]),t._v(" "),a("div",{staticClass:"language-pyhton extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("@method_decorator(timer,name='post')\n@method_decorator(timer,name='get')\nclass PublisherAdd(View):\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request"}},[t._v("#")]),t._v(" request")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("request.method  # 请求方法 GET POST\nrequest.GET     # url上的查询参数  /dd/?id=1&name=alex\nrequest.POST    # POST请求提交的数据  {}  编码是urlencode才有数据\nrequest.path_info  # 路径信息   不包含IP和端口 也不包含查询参数\nrequest.body    # 请求体  原始数据\nrequest.COOKIES   cookie\nrequest.session   session\nrequest.FILES   # 上传的文件\nrequest.META   # 头信息   HTTP_  - _> _ 大写\n\nrequest.get_full_path()    # 路径信息   不包含IP和端口 包含查询参数  \nrequest.is_ajax()   # 是否ajax请求\n")])])]),a("h3",{attrs:{id:"response"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[t._v("#")]),t._v(" response")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("HttpReponse('字符串')  # 返回字符串\nrender(request,'模板的路径',{})   #  返回一个HTML页面 \nredirect(重定向的地址)   重定向 # 响应头  Location:地址\n\nfrom django.http.response import JsonResponse\nJsonResponse(ret,safe=False)   # json序列化  默认传字典   非字典 safe=False \n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);